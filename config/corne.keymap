/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        semicolon {
            bindings = <&kp SEMI>;
            key-positions = <33 32>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W           &kp F               &kp P               &kp B        &kp J    &kp L               &kp U               &kp Y           &kp APOS  &none
&none  &kp A  &mt LEFT_ALT R  &mt LEFT_CONTROL S  &mt LEFT_COMMAND T  &kp G        &kp M    &mt LEFT_COMMAND N  &mt LEFT_ALT LCTRL  &mt LEFT_ALT I  &kp O     &none
&none  &kp Z  &kp X           &kp C               &kp D               &kp V        &kp K    &kp H               &kp COMMA           &kp DOT         &kp SEMI  &none
                              &sl 1               &kp BACKSPACE       &kp SPACE    &kp RET  &sk LEFT_SHIFT      &sl 2
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N7     &kp N5    &kp N3     &kp N1         &kp N9       &kp N8   &kp N0          &kp N2     &kp N4    &kp N6     &none
&none  &kp LSHFT  &kp LALT  &kp RCTRL  &kp LGUI       &kp F11      &kp F12  &kp LGUI        &kp RCTRL  &kp LALT  &kp LSHFT  &none
&none  &kp F7     &kp F5    &kp F3     &kp F1         &kp F9       &kp F8   &kp F10         &kp F2     &kp F4    &kp F6     &none
                            &none      &kp BACKSPACE  &kp SPACE    &kp RET  &kp LEFT_SHIFT  &none
            >;
        };

        sym_layer {
            bindings = <
&none  &kp ESC   &kp LBKT       &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp TILDE           &kp CARET        &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RBKT           &kp GRAVE    &none
&none  &kp PIPE  &kp AMPERSAND  &kp EQUAL       &kp PLUS              &kp MINUS           &kp EXCLAMATION  &kp QUESTION           &kp PERCENT      &kp DOUBLE_QUOTES  &kp HASH     &none
&none  &kp TAB   &kp BACKSLASH  &kp COLON       &kp LESS_THAN         &kp GREATER_THAN    &kp SLASH        &kp ASTERISK           &kp DOLLAR       &kp UNDERSCORE     &kp AT_SIGN  &none
                                &none           &kp BACKSPACE         &kp SPACE           &kp RET          &kp LEFT_SHIFT         &none
            >;
        };

        nav_layer {
            bindings = <
&none  &none  &none     &none      &none          &kp C_VOLUME_UP    &kp C_FAST_FORWARD  &kp TAB         &none      &none     &none  &none
&none  &none  &kp LALT  &kp RCTRL  &kp LGUI       &kp C_MUTE         &kp C_PLAY_PAUSE    &kp LGUI        &kp RCTRL  &kp LALT  &none  &none
&none  &none  &none     &none      &none          &kp C_VOL_DN       &kp C_PREV          &kp LG(TAB)     &none      &none     &none  &none
                        &none      &kp BACKSPACE  &kp SPACE          &kp ENTER           &kp LEFT_SHIFT  &none
            >;
        };
    };
};
